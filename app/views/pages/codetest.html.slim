

#width-message.ui.warning.message
  i.close.icon
  .header
    |Warning
  |To see the editor, screen width should be at least 630px

#editor-wrapper
  #panel
    /.ui.left.menu
    .ui.header#code-name
      |#{@topic}
    button.ui.teal.button#run-btn onClick="executeTask()"
      i.play.icon
      | Run
    /.right.menu

  #question

  #editor-loading
    .ui.active.inverted.dimmer
      .ui.text.loader
        |Fetching the Example 
  #code_editor
    .ui.positive.message
      p
        |Refresh if you can't see the editor

  button.ui.basic.large.icon.button#exampleBtn.show onClick="exampleShow();"
    |Examples
    i.angle.left.icon

  button.ui.basic.large.icon.button#showBtn onClick="resultShow();"
    |Result     
    i.angle.left.icon

  #example
    .result-menu.ui.fluid.secondary.menu style="align-items: center;"
      p.large.text
        |Examples:
      .right.menu
        button.ui.grey.basic.icon.button#hideBtn onClick="exampleHide();"
          i.chevron.right.icon
    #example-content
      .ui.relaxed.animated.divided.list
        - @examples.each do |example|
          .item.editor-example onClick="exampleLoad(#{example.id});"
            i.copy.outline.icon
            |#{example.name}

  #result
    .result-menu.ui.fluid.secondary.menu style="align-items: center;"
      p.large.text
        |Result:
      .right.menu
        button.ui.grey.basic.icon.button#hideBtn onClick="resultHide();"
          i.chevron.right.icon
    #result-content
      .ui.active.inverted.dimmer
        .ui.text.loader
          |Fetching the Result

= render(partial: "partials/index")

javascript:
  function show_size_message() {
    var width = $(window).width();
    if (width < 630) {
      if ($("#width-message").hasClass("hidden")) {
        $("#width-message").removeClass("hidden");
      }
      $("#editor-wrapper").addClass("hidden");
    } else {
      if (!$("#width-message").hasClass("hidden")) {
        $("#width-message").addClass("hidden");
      }
      $("#editor-wrapper").removeClass("hidden");
    }
  }

  function set_wrapper_size() {
    $("#editor-wrapper").height($(window).height() - $("#mainMenu").height() - 160);
    $("#editor-wrapper").width($(window).width() - 10);
  }

  $(document).ready(function() {
    //$('.ui.dropdown').dropdown();
    show_size_message();
    set_wrapper_size();
  });

  $(window).resize(function(){
    show_size_message();
    set_wrapper_size();
  });

  $(".message .close")
    .on('click', function() {
      $(this)
        .closest('.message')
        .transition('fade')
      ;
    })
  ;


= javascript_include_tag "/ace-builds/src-min-noconflict/ace.js"
javascript:
  var editor = ace.edit("code_editor");
  editor.setTheme("ace/theme/chrome");
  editor.session.setMode("ace/mode/python");
  var hasResult = false;
  var code_name = "";
  var WarnMsg = "# Don't change the function name and formal parameters\n"

  String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
  };

  function format(target) {
    return target.replace(/\n/g, "</br>").replace(/\t/g, "&#8195;").replace(" ", "&#032;");
  }

  function r_format(target) {
    return target.replaceAll("&amp;", "&").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&quot;", "\"");
  }

  function exampleShow() {
      $("#example").addClass("show");
      $("#exampleBtn").removeClass("show");
  }

  function exampleHide() {
    if ($("#example").hasClass("show")) {
        $("#example").removeClass("show");
        $("#exampleBtn").addClass("show");
    }
  }

  function resultHide() {
    $("#result").removeClass("show");
    if (hasResult) {
      $("#showBtn").addClass("show");
    }
  }

  function resultShow() {
    if (hasResult) {
        $("#result").addClass("show");
        $("#showBtn").removeClass("show");
      }
  }

  function disableRun() {
    $("#run-btn").addClass("disabled");
    $("#hideBtn").addClass("hide");
  }

  function enableRun() {
    $("#run-btn").removeClass("disabled");
    $("#hideBtn").removeClass("hide");
  }

  function exampleLoad(tid) {
    exampleHide();
    $("#editor-loading").addClass("show");
    $.ajax({
    type: 'POST',
    url: "#{load_example_path}",
    data: { 
      id: tid, 
      authenticity_token: "#{form_authenticity_token}"
    },
    dataType: 'json',
    success: function (data) {
        editor.setValue(WarnMsg + r_format(data.main_code));
        code_name = data.name;
        $("#code-name").html(code_name + ".py");
        $("#editor-loading").removeClass("show");
        hasResult = false;
      },
      error: function() {
        editor.setValue("// Failed loading\n");
        $("#editor-loading").removeClass("show");
        hasResult = false;
        $("#showBtn").removeClass("show");
      }
    });
  }

  function executeTask() {
    if ($("#run-btn").hasClass("disabled")) return;
    resultHide();
    disableRun();
    $("#result").addClass("show");
    exampleHide();
    hasResult = true;
    $("#result-content").html("<div class='ui active inverted dimmer'><div class='ui text loader'>Fetching the Result</div></div>");

    $.ajax({
    type: 'POST',
    url: "#{create_task_path}",
    data: { 
      main_code: editor.getValue(), 
      input_code: '#{@input_code}', 
      name: code_name, 
      authenticity_token: "#{form_authenticity_token}"
    },
    dataType: 'json',
    success: function (data) {
        enableRun();
        $("#result-content").html("<table class='ui teal table' id='execute-table'><thead><tr><th>Result</th></tr></thead></table>");
        $("#execute-table").append("<tbody><tr><td>" + format(filterXSS(data.result)) + "</td></tr></tbody>");
      },
      error: function() {
        $('#result-content').html("Internal Error");

        enableRun();
      }
    });

  }
  
  // Beginning
  editor.setValue(WarnMsg + r_format("#{@main_code}"));
  code_name = "#{@name}";
  $("#question").html(r_format('#{@question}'));

